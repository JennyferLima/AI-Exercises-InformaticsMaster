# -*- coding: utf-8 -*-
"""Fuzzy Movie Recommendation.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q_HqiOPqXgVcd5SxfTNqIl1aExsCQt1H

# Part 1:

#### Problem 3: You can suggest a problem, proposing a System similar to the ones that were requested in Problem 1 or Problem 2, sending the specification to me analyze and decide on the recommendation.

## Movie Recommendation System with Fuzzy Logic

* Proposed Approach:
Implementation of a movie recommendation system using fuzzy logic with the Scikit-Fuzzy library in Python. The proposed system aims to recommend movies based on user preferences regarding genre and release year.

Methodology:

* Definition of Input and Output Variables:
Two input variables were defined: genre and release_year, representing the user's preferred genre and desired release year, respectively. Additionally, an output variable, recommendation, was defined to indicate the level of recommendation for the movie.
* Fuzzyfication of Variables:
For each variable, membership functions were defined to represent different linguistic categories, such as "action," "romance," "old," and "recent." The membership functions were modeled triangularly to simplify fuzzy reasoning.
* Inference Rules:
Fuzzy inference rules were established to map combinations of input variables to the output variable. The rules were defined based on prior knowledge of user preferences regarding genre and release year of movies.
* System Evaluation:
The fuzzy system was evaluated using a fuzzy control instance, where user inputs were defined and the movie recommendation was calculated based on the inference rules.
* Results Visualization:
The results were visualized through graphs of membership functions and the recommendation level calculated by the fuzzy system.

\\
Final Remarks:
The proposed methodology utilizes fuzzy logic to model user preferences and recommend movies based on these preferences. The fuzzy approach allows for dealing with the uncertainty and imprecision inherent in human preferences, providing more flexible and adaptable recommendations. The use of the Scikit-Fuzzy library in Python simplifies the implementation of the system and facilitates its integration with other tools and technologies.
"""

!pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Definir as variáveis de entrada
genero = ctrl.Antecedent(np.arange(0, 11, 1), 'genero')
ano_lancamento = ctrl.Antecedent(np.arange(1900, 2023, 1), 'ano_lancamento')

# Definir as funções de pertinência para cada variável
genero['acao'] = fuzz.trimf(genero.universe, [0, 0, 5])
genero['romance'] = fuzz.trimf(genero.universe, [0, 5, 10])
genero['ficcao_cientifica'] = fuzz.trimf(genero.universe, [5, 10, 10])

ano_lancamento['antigo'] = fuzz.trimf(ano_lancamento.universe, [1900, 1900, 1975])
ano_lancamento['recente'] = fuzz.trimf(ano_lancamento.universe, [1975, 2023, 2023])

# Visualizar as funções de pertinência
genero.view()
ano_lancamento.view()

# Definir as variáveis de saída
recomendacao = ctrl.Consequent(np.arange(0, 11, 1), 'recomendacao')

# Definir as funções de pertinência para a variável de saída
recomendacao['baixa'] = fuzz.trimf(recomendacao.universe, [0, 0, 5])
recomendacao['alta'] = fuzz.trimf(recomendacao.universe, [0, 5, 10])

# Definir as regras
rule1 = ctrl.Rule(genero['acao'] & ano_lancamento['recente'], recomendacao['alta'])
rule2 = ctrl.Rule(genero['romance'] & ano_lancamento['antigo'], recomendacao['baixa'])
rule3 = ctrl.Rule(genero['ficcao_cientifica'] & ano_lancamento['recente'], recomendacao['alta'])

# Criar o controlador fuzzy
sistema_fuzzy = ctrl.ControlSystem([rule1, rule2, rule3])
sistema = ctrl.ControlSystemSimulation(sistema_fuzzy)

# Entrada do usuário
sistema.input['genero'] = 7  # Gênero preferido: ficção científica
sistema.input['ano_lancamento'] = 2010  # Ano de lançamento preferido: recente

# Computar a recomendação
sistema.compute()

# Visualizar o resultado
print(f"Recomendação: {sistema.output['recomendacao']}")
recomendacao.view(sim=sistema)